name: CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout current repo
        uses: actions/checkout@v2

### Docker buildx build and push updates ####
      - name: Prepare
        id: prep
        run: |
          TAG="latest"
          IMAGE="twsearle/nemo-feedback-ci"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Build production image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ci/Dockerfile
          push: true # This would be set to true in a real world deployment scenario.
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

### Checkout other repos via github actions ####
      - name: checkout jedicmake
        uses: actions/checkout@v2
        with:
          path: ci/jedicmake
          repository: JCSDA-internal/jedi-cmake
          token: ${{ secrets.GH_PAT }}
      - name: checkout eckit
        uses: actions/checkout@v2
        with:
          path: ci/eckit
          repository: JCSDA-internal/eckit
          token: ${{ secrets.GH_PAT }}
      - name: checkout eckit
        uses: actions/checkout@v2
        with:
          path: ci/fckit
          repository: JCSDA-internal/fckit
          token: ${{ secrets.GH_PAT }}
      - name: checkout saber
        uses: actions/checkout@v2
        with:
          path: ci/saber
          repository: JCSDA-internal/saber
          token: ${{ secrets.GH_PAT }}
      - name: checkout oops
        uses: actions/checkout@v2
        with:
          path: ci/oops
          repository: JCSDA-internal/oops
          token: ${{ secrets.GH_PAT }}
      - name: checkout ioda
        uses: actions/checkout@v2
        with:
          path: ci/ioda
          repository: JCSDA-internal/ioda
          token: ${{ secrets.GH_PAT }}
      - name: checkout ufo
        uses: actions/checkout@v2
        with:
          path: ci/ufo
          repository: JCSDA-internal/ufo
          token: ${{ secrets.GH_PAT }}
      - name: checkout atlas
        uses: actions/checkout@v2
        with:
          path: ci/atlas
          repository: ecmwf/atlas
          token: ${{ secrets.GH_PAT }}
      - name: checkout atlas-orca
        uses: actions/checkout@v2
        with:
          path: ci/atlas-orca
          repository: wdeconinck/atlas-orca
          token: ${{ secrets.GH_PAT }}
      - name: checkout orca-jedi
        uses: actions/checkout@v2
        with:
          path: ci/orca-jedi
          repository: MetOffice/orca-jedi
          token: ${{ secrets.GH_PAT }}
      - name: build and test
        run: |
          docker run --rm \
            --entrypoint=/usr/local/src/nemo-feedback/ci/build.sh \
            --workdir=/usr/local/src/nemo-feedback/ci \
            --volume ${PWD}:/usr/local/src/nemo-feedback \
            "twsearle/nemo-feedback-ci:latest"
